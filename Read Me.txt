After you init the react native project follow the steps:

1: git init in project folder

2: on package.json in scripts add:

"android": "react-native run-android",
"ios": "react-native run-ios",
"release": "react-native run-android --variant=release",
"start": "react-native start",
"test": "jest",
"lint": "eslint .",
"clean": "cd android && gradlew clean",
"menu": "adb shell input keyevent 82",
"reverse": "adb reverse tcp:8081 tcp:8081",
"reload": "adb shell input keyevent 82 && adb shell input keyevent 66 && adb shell input keyevent 66",
"devmenu": "adb shell input keyevent 82",
"debug": "adb shell input keyevent 82 && adb shell input keyevent 61 && adb shell input keyevent 66 && adb shell input keyevent 66"

3: enable hermes on android

!!! If you want to skip steps 4 - 7 do this:
npm i @react-navigation/native react-native-reanimated react-native-gesture-handler react-native-screens react-native-safe-area-context @react-native-community/masked-view @react-navigation/stack @react-native-community/async-storage redux react-redux redux-persist redux-saga redux-devtools-extension react-native-splash-screen

4a: add NAVIGATION 5

npm i @react-navigation/native react-native-reanimated react-native-gesture-handler react-native-screens react-native-safe-area-context @react-native-community/masked-view

4b: Installing the stack navigator library

npm install @react-navigation/stack

more here: https://reactnavigation.org/docs/hello-react-navigation

5: add ASYNC STORAGE
npm i @react-native-community/async-storage 
more here: https://react-native-community.github.io/async-storage/docs/install

6: /* STATE MANAGMENT */ 
npm i redux react-redux redux-persist redux-devtools-extension redux-saga

7: /* SPLASH SCREEN */
npm i react-native-splash-screen
or
npm i react-native-bootsplash

!!! If you want to skip 8-13 steps just copy paste the src folder and paste it to the project

8: 
create src folder
rename App.js to index.js in src folder
delete existence code and replace it with this:

	/* Libraries */
	import React from 'react';
	import {Text} from 'react-native';

	const Root = () => {
	  return (
		<>
		  <Text>Hello World!</Text>
		</>
	  );
	};

	export default Root;

rename import App to Root in root index.js and replace code with this:

	/* Libraries */
	import {AppRegistry} from 'react-native';
	/* Local Files */
	import Root from './src/index.js';
	import {name as appName} from './app.json';

	AppRegistry.registerComponent(appName, () => Root);

9: Add navigation

/* Libraries */
import 'react-native-gesture-handler';
import React from 'react';
import {Text} from 'react-native';
import {NavigationContainer} from '@react-navigation/native';

const Root = () => {
  return (
    <NavigationContainer>
      <Text>Hello World!</Text>
    </NavigationContainer>
  );
};

export default Root;

10: Add Redux

Replace code in src/index.js

	/* Libraries */
	import 'react-native-gesture-handler';
	import React from 'react';
	import {Text} from 'react-native';
	import {NavigationContainer} from '@react-navigation/native';
	import {Provider} from 'react-redux';
	/* Local Files */
	import {store} from './redux/store.js';

	const Root = () => {
	  return (
		<Provider store={store}>
		  <NavigationContainer>
			<Text>Hello World!</Text>
		  </NavigationContainer>
		</Provider>
	  );
	};

	export default Root;

Crete redux folder in src and add store.js and add this code:

	/* Libraries */
	import {createStore} from 'redux';
	import {composeWithDevTools} from 'redux-devtools-extension';
	/* Local Files */
	import {reducers} from './ducks/index.js';

	const store = createStore(reducers, composeWithDevTools());

	export {store};

Create a ducks folder in redux folder and add index.js and add this:

	/* Libraries */
	import {combineReducers} from 'redux';
	/* Local Files */
	import counter from './count.js';

	/* Reducers */
	const reducers = combineReducers({
	  counter,
	});

	export {reducers};

Now create a count.js in ducks folder (for demo purposes) and add this:

	/*  Types */
	export const INCREMENT = 'INCREMENT';
	export const DECREMENT = 'DECREMENT';

	const initialState = {
	  count: 0,
	};

	/*  Reducers */
	export default (state = initialState, action) => {
	  switch (action.type) {
		case INCREMENT:
		  return {
			...state,
			count: state.count + 1,
		  };
		case DECREMENT:
		  return {
			...state,
			count: state.count - 1,
		  };
		default:
		  return state;
	  }
	};

	/*  Actions */
	export const increment = () => ({type: INCREMENT});
	export const decrement = () => ({type: DECREMENT});

11: Add Persist Store:

In src/index.js replace with this: 

	/* Libraries */
	import 'react-native-gesture-handler';
	import React from 'react';
	import {Text} from 'react-native';
	import {NavigationContainer} from '@react-navigation/native';
	import {Provider} from 'react-redux';
	import {PersistGate} from 'redux-persist/integration/react';
	/* Local Files */
	import {store, persistor} from './redux/store.js';

	const Root = () => {
	  return (
		<Provider store={store}>
		  <PersistGate loading={null} persistor={persistor}>
			<NavigationContainer>
			  <Text>Hello World!</Text>
			</NavigationContainer>
		  </PersistGate>
		</Provider>
	  );
	};

	export default Root;

In store.js replace with this: 

	/* Libraries */
	import {createStore} from 'redux';
	import {composeWithDevTools} from 'redux-devtools-extension';
	import AsyncStorage from '@react-native-community/async-storage';
	import {persistStore, persistReducer} from 'redux-persist';
	/* Local Files */
	import {reducers} from './ducks/index.js';

	const config = {
	  key: 'root',
	  storage: AsyncStorage,
	  whitelist: ['counter'],
	  blacklist: [''],
	};
	const persistedReducer = persistReducer(config, reducers);
	const store = createStore(persistedReducer, composeWithDevTools());
	const persistor = persistStore(store);

	export {store, persistor};

12: Add Redux Sagas: 

In store.js add this:

	/* Libraries */
	import {createStore, applyMiddleware} from 'redux';
	import {composeWithDevTools} from 'redux-devtools-extension';
	import AsyncStorage from '@react-native-community/async-storage';
	import {persistStore, persistReducer} from 'redux-persist';
	import createSagaMiddleware from 'redux-saga';
	/* Local Files */
	import {sagas, reducers} from './ducks/index.js';

	const config = {
	  key: 'root',
	  storage: AsyncStorage,
	  whitelist: [''],
	  blacklist: [''],
	};
	const persistedReducer = persistReducer(config, reducers);
	const sagaMiddleware = createSagaMiddleware();
	const store = createStore(
	  persistedReducer,
	  composeWithDevTools(applyMiddleware(sagaMiddleware)),
	);
	const persistor = persistStore(store);
	sagaMiddleware.run(sagas);

	export {store, persistor};
	
In redux/ducks/index.js add this:

	/* Libraries */
	import {combineReducers} from 'redux';
	import {all} from 'redux-saga/effects';
	/* Local Files */
	import counter from './count.js';
	import {watchIncrementAsync} from './count.js';
	import helloSaga from './hello';

	/* Reducers */
	const reducers = combineReducers({
	  counter,
	});

	/* Sagas */
	const sagas = function*() {
	  yield all([watchIncrementAsync(), helloSaga()]);
	};

	export {reducers, sagas};

In redux/ducks/count.js add this:

	/*  Types */
	export const INCREMENT = 'INCREMENT';
	export const DECREMENT = 'DECREMENT';
	export const INCREMENT_ASYNC = 'INCREMENT_ASYNC';

	const initialState = {
	  count: 0,
	};

	/*  Reducers */
	export default (state = initialState, action) => {
	  switch (action.type) {
		case INCREMENT:
		  return {
			...state,
			count: state.count + 1,
		  };
		case DECREMENT:
		  return {
			...state,
			count: state.count - 1,
		  };
		default:
		  return state;
	  }
	};

	/*  Actions */
	export const increment = () => ({type: INCREMENT});
	export const decrement = () => ({type: DECREMENT});

	/* Saga */
	import {put, takeLatest, delay} from 'redux-saga/effects';

	const incrementAsync = function*() {
	  yield delay(4000);
	  yield put({type: INCREMENT});
	};

	export const watchIncrementAsync = function*() {
	  yield takeLatest(INCREMENT_ASYNC, incrementAsync);
	};

In ducks folder create hello.js file and add this:

	export default function* helloSaga() {
	  console.log('Hello Sagas!');
	}


13: In src add assets folder, components, navigations, screens, styles


14: Add splash screen

Update the MainActivity.java to use react-native-splash-screen via the following changes:


	import android.os.Bundle;
	import org.devio.rn.splashscreen.SplashScreen;

	
    @Override
	protected void onCreate(Bundle savedInstanceState) {
		SplashScreen.show(this, R.style.SplashScreenTheme);
		super.onCreate(savedInstanceState);
	}
	


Create a file called launch_screen.xml in app/src/main/res/layout (create the layout-folder if it doesn't exist). The contents of the file should be the following:

	<?xml version="1.0" encoding="utf-8"?>
	<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
		xmlns:app="http://schemas.android.com/apk/res-auto"
		android:layout_width="match_parent"
		android:layout_height="match_parent"
		android:background="@color/status_bar_color"
		android:orientation="vertical">

	</RelativeLayout>
	
Add a color called primary_dark in app/src/main/res/values/colors.xml

	<?xml version="1.0" encoding="utf-8"?>
	<resources>
		<color name="status_bar_color">#EC407A</color>
	</resources>
	
In src/index.js add this:

	import React, {useEffect} from 'react';

	const Root = () => {
	  useEffect(() => {
		SplashScreen.hide();
	  });
	
In res -> values -> styles add this:

	<style name="SplashScreenTheme" parent="SplashScreen_SplashTheme">
        <item name="colorPrimaryDark">@color/status_bar_color</item>
    </style>

Go to https://github.com/Vincent-Loi/android-drawable-importer-intellij-plugin and download the zip file
Open android studio go to file -> settings -> plugins and install the .zip from pc
Right click res folder -> new -> dawn go to Batch drawable import -> click + find the image and import
Go to layout -> launch_screen.xml and edit the launch_screen in your needs

15: Change app icon:
Go to android studio. Navigate to res folder -> mipmpa right click -> new -> image asset and here create the icon of the app

16: Change app name in phone:
Go to android studio. In res folder -> values -> strings.xml and change the value in app_name 
	
17: Add Stack Navigation
check folders

-: If dependancies that need link doesn't work open android studio 
and let gradle sync

-: install typescript to project: https://reactnative.dev/docs/typescript